/*

  ***** Array flat *****

  이전에는 underscore라는 라이브를 깔아서 flatten함수를 썼었다.
  원래는 설치해서 사용해야하는 번거로움이있는데 지금은 그냥 사용하면되니 시간이 많이 절약된다.

  [1,2,3,4,5,6] 이것은 일차원배열이다.
  세상에 이런배열들만 있으면 좋겠지만
  가끔은
  [1, [2], [ [3], [4], [ [ [5], [6], [ [7], [8], [9] ] ] ] ] ] 이런 배열이 있을수도있다.
  이렇게 배열안에 배열이 있을수도있고, 그 안에 배열이 있고 이런 구조가있다.
  이런 데이터로 작업을 해야하면 정말 짜증날것이다.

  그러니까 flat은 이 어마무시한 배열이 가지고 있는 요소들을 전부 빼내준다.
  만약 내가 하고싶은게 요소들을 다 빼내는거라면 우리가 원하던 기능이다.
  [1, [2], [ [3], [4], [ [ [5], [6], [ [7], [8], [9] ] ] ] ] ].flat()
  flat을 해보면
  (3) [1, Array(1), Array(3)] // 기존값
  (5) [1, 2, Array(1), Array(1), Array(1)]  // flat값
  이렇게 나오는 이유는 flat의 기본적으로 깊이가 1로 설정되어있기 때문.

  [1, [2], [ [3], [4], [ [ [5], [6], [ [7], [8], [9] ] ] ] ] ].flat(5)
  (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]
  깊이를 설정해주니 완벽한 결과물을 얻었다.


*/

console.log([1, [2], [ [3], [4], [ [ [5], [6], [ [7], [8], [9] ] ] ] ] ].flat(5))